name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: production

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Setup cred
        run: echo '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}' > cred.json

      - name: Install chef
        uses: actionshub/chef-install@main
      
      - name: Install cookbooks
        run: berks vendor -p=./packer/chef
        # working-directory: ./packer/chef

      - name: Setup `packer`
        uses: hashicorp/setup-packer@main
        id: setup
        with:
          version: ""

      - name: Run `packer init`
        id: init
        run: "packer init packer/nomad.pkr.hcl"

      - name: Run `packer validate`
        id: validate
        run: "packer validate packer/nomad.pkr.hcl"
        env:
          PKR_VAR_project_id: "${{ vars.PKR_VAR_project_id }}"
          PKR_VAR_zone: "${{ vars.PKR_VAR_zone }}"
          PKR_VAR_builder_sa: "${{ vars.PKR_VAR_builder_sa }}"
              
      - name: Build Artifact
        run: packer build --force packer/nomad.pkr.hcl
        env:
          GOOGLE_APPLICATION_CREDENTIALS: "./cred.json"
          PKR_VAR_project_id: "${{ vars.PKR_VAR_project_id }}"
          PKR_VAR_zone: "${{ vars.PKR_VAR_zone }}"
          PKR_VAR_builder_sa: "${{ vars.PKR_VAR_builder_sa }}"
          
  test:
    if: success()
    needs: build
    runs-on: ubuntu-latest
    defaults:
        run:
            shell: bash
    steps:
      - name: 
        run: echo "Tests"
  
  deploy:
    if: success()
    needs: test
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
            cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Plan
        run: terraform plan -input=false

      - name: Terraform Apply
        if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
      
  destroy:
    if: success()
    needs: deploy
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
            cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Terraform Destroy
        if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
        run: terraform destroy -auto-approve -input=false